version: '2'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:2.12-2.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.1.1 # node logcal ip Don't insert localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  nginx:
    container_name: nginx
    image: nginx:latest
    restart: always
    ports:
      - "80:80/tcp"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /home/super_user/Network-infra-kafka/backend.crt:/etc/nginx/backend.crt
      - /home/super_user/Network-infra-kafka/backend.key:/etc/nginx/backend.key
    networks:
      - nginx
    environment:
      - TZ=Asia/Seoul
    depends_on:
      - backend
      - mysql
  backend:
    image: minjuncho/netcc-be:2.3.1
    container_name: backend
    restart: always
    expose:
      - "3000"
    environment:
      DATABASE_HOST: mysql
      DATABASE_PORT: 3306
      DATABASE_USER: root
      DATABASE_PASSWORD: 1234
      DATABASE_NAME: db
      JWT_SECRET: RKmMAaRBjVXdrpOaZgiwdUniYkJwpG
      JWT_EXPIRATION_TIME: 1000d
      KAFKA_BROKER: "61.252.59.44:9092"
      KAFKA_TOPIC: cctv
    networks:
      - net
      - nginx
    depends_on:
      - mysql
  mysql:
    image: mysql:latest
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: db
      MYSQL_USER: user
      MYSQL_PASSWORD: 1234
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - net

networks:
 net:
   driver: bridge
 nginx:
   driver: bridge

volumes:
  mysql-data:
    driver: local

